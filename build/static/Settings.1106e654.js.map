{"version":3,"sources":["webpack:///./js/routes/Settings/containers/Settings.js"],"names":["mapState2Props","_react","__webpack_require__","_decko","_reactRedux","_decorators","_antd","LanguageOptions","value","label","propTypes","lang","PropTypes","string","dispatch","func","store","app","locales","PureSettings","props","_classCallCheck","this","_this","_possibleConstructorReturn","__proto__","Object","getPrototypeOf","call","state","oldPassword","newPassword","confirmPassword","Component","logger","log","AppActions","switchLang","_this2","_state","params","newer","origin","services","authPassword","then","res","message","success","setState","catch","e","error","key","handleSubmit","id","target","_react2","default","createElement","className","Select","Simple","name","clearable","options","onChange","handleLangChange","_state2","_Container2","Body","htmlFor","Input","type","placeholder","handlePwdChange","onKeyPress","handleKeyPress","Button","onClick","bind","connect","containerInject"],"mappings":"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","file":"Settings.1106e654.js","sourcesContent":["'use strict';\n\nimport React, { Component } from 'react'; \nimport PropTypes from 'prop-types';\nimport { bind } from 'decko';\nimport { connect } from 'react-redux';\nimport Container from 'jscom/components/app/Container';\nimport { containerInject } from 'jscom/utils/decorators';\nimport { Select, Button, message, Input } from 'antd';\nimport AppActions from 'jscom/actions/app';\nimport './Settings.scss';\nimport services from 'jscom/services';\n\nconst LanguageOptions = [\n    { value: 'zh-Hans', label: '中文' },\n    { value: 'en-US', label: 'English' },\n];\n\nconst propTypes = {\n    lang: PropTypes.string,\n    dispatch: PropTypes.func,\n};\n\nexport function mapState2Props (store) {\n    const { locales } = store.app || {};\n    return {\n        lang: locales.lang\n    };\n}\n\n\nexport class PureSettings extends Component {\n\n    static propTypes = propTypes;\n\n    constructor (props) {\n        super(props);\n        this.state = {\n            oldPassword: '',\n            newPassword: '',\n            confirmPassword: ''\n        };\n    }\n\n    @bind\n    handleLangChange (value) {\n        this.logger.log(value);\n        this.props.dispatch( AppActions.switchLang(value) );\n    }\n\n    @bind\n    handleSubmit () {\n\n        const { oldPassword, newPassword, confirmPassword } = this.state;\n        const params = {};\n\n        if (!oldPassword) {\n            message.error('Please Input Old Password');\n            return;\n        }\n\n        if (!newPassword) {\n            message.error('Please Input New Password');\n            return;\n        }\n\n        if (newPassword !== confirmPassword || !newPassword) {\n            message.error('Confirm Password do not math!');\n            return;\n        }\n\n        params.newer = newPassword;\n        params.origin = oldPassword;\n\n        services.authPassword(params).then((res) => {\n            this.logger.log(res);\n            message.success('Change Password Success!');\n            this.setState({\n                newPassword: '',\n                oldPassword: '',\n                confirmPassword: ''\n            })\n        }).catch((e) => {\n            message.error(e.message);\n        })\n    }\n\n    @bind\n    handleKeyPress (e) {\n        if (e.key === 'Enter') {\n            this.handleSubmit();\n        }\n    }\n\n    @bind\n    handlePwdChange (e, id) {\n        this.setState({\n            [id]: e.target.value\n        })\n    }\n\n    renderLang () {\n        return (\n            <div className=\"c-form c-form-group\">\n                <legend className=\"s-setcommon__root\">Language Change</legend>\n                <span className=\"s-setcommon__item\">\n                    <Select.Simple\n                        name=\"form-field-name\"\n                        value={this.props.lang}\n                        clearable={false}\n                        options={LanguageOptions}\n                        onChange={this.handleLangChange}\n                    />\n                </span>\n\n            </div>\n        );\n    }\n\n    render() {\n        const { oldPassword, newPassword, confirmPassword } = this.state;\n        return (\n            <Container className=\"s-settings\">\n                <Container.Body>\n                    <div className=\"c-form  c-form-group\">\n                        <legend className=\"s-setscy__root\">Change Password</legend>\n                        <div className=\"s-setscy__line\">\n                            <label htmlFor=\"oldPassword\">Old Password  &nbsp; &nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</label>\n                            <Input id=\"oldPassword\" type=\"password\" placeholder=\"Old Password\" className=\"s-setscy__input s-query__item\" value={oldPassword} onChange={this.handlePwdChange} />\n                        </div>\n                        <div className=\"s-setscy__line\">\n                            <label htmlFor=\"newPassword\">New Password &nbsp; &nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</label>\n                            <Input id=\"newPassword\" type=\"password\" placeholder=\"New Password\" className=\" s-setscy__input s-query__item\" value={newPassword} onChange={this.handlePwdChange} />\n                        </div>\n                        <div className=\"s-setscy__line\">\n                            <label htmlFor=\"confirmPassword\">Confirm Password  &nbsp; &nbsp;</label>\n                            <Input id=\"confirmPassword\" type=\"password\" placeholder=\"Confirm New Password\" className=\"s-setscy__input s-query__item\" value={confirmPassword} onChange={this.handlePwdChange} onKeyPress={this.handleKeyPress} />\n                        </div>\n                        <Button type=\"primary\" onClick={this.handleSubmit}>Submit</Button>\n                    </div>\n                    \n                </Container.Body>\n            </Container>\n        );\n    }\n}\n\nexport default connect(mapState2Props)(containerInject(PureSettings))"],"sourceRoot":""}